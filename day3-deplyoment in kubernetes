##lets create our first deployment
332  kubectl create deployment my-first-deployment --image=nginx --port=80 --dry-run=client -o yaml > deploy.yml
  333  cat deploy.yml
  ##then apply it
    335  kubectl apply -f deploy.yml
  336  kubectl get deploy
  337  kubectl get rs
  338  kubectl get pod
####
  345  nano deploy.yml
##change the replicas to 2
  346  kubectl apply -f deploy.yml
#now the deployment will show that you have two pod
  347  kubectl get deploy
  348  kubectl get rs
  349  kubectl get pod
#lets delete one of the pod change the pod as per your 
  350  kubectl delete pod my-first-deployment-5df6974956-2wtjs
  351  kubectl get pod
  352  kubectl describe deploy my-first-deployment
  353  kubectl get rs
  354  kubectl describe rs my-first-deployment-5df6974956
#lets expose the deployment 
 366  kubectl get pod -o wide
##check the ip address

  368  kubectl expose deployment my-first-deployment --type=NodePort --port=80 --name=my-first-deploy-service
  369  kubectl get svc
#the dexscribe svc wiull show all the endpoint that is the ip address of all your pod
  370  kubectl describe svc my-first-deploy-service
##lets update the image
 380  kubectl set image deployment my-first-deployment nginx=nulldevil/phpsysinfo
  381  kubectl get pod
  382  kubectl get rs
  385  kubectl rollout status deployment my-first-deployment
  388  kubectl describe deploy my-first-deployment
##rolling update
#this will show the rollout historyu
 390  kubectl rollout history deployment my-first-deployment
#if you want to get more details about the rollout history
#after this refresh the page
  391  kubectl rollout history deployment my-first-deployment --revision=2
#after this refresh the page

  392  kubectl rollout history deployment my-first-deployment --revision=1
##undo will do viceversa after this 
  393  kubectl rollout undo deployment my-first-deployment
##if you want to go to a particular release
  394  kubectl rollout undo deployment my-first-deployment --to-revision=2
#@#we will update one more time the images
 409  kubectl set image deployment my-first-deployment nginx=gopal1409/sysapp
##autoscaling in k8s
root@ip-172-31-116-255:~/flask-app# kubectl scale deploy my-first-deployment --replicas=5
deployment.apps/my-first-deployment scaled
root@ip-172-31-116-255:~/flask-app# kubectl get deploy
NAME                  READY   UP-TO-DATE   AVAILABLE   AGE
my-first-deployment   4/5     5            4           166m
root@ip-172-31-116-255:~/flask-app# kubectl get deploy
NAME                  READY   UP-TO-DATE   AVAILABLE   AGE
my-first-deployment   5/5     5            5           167m
root@ip-172-31-116-255:~/flask-app# kubectl autoscale deploy my-first-deployment --min=5 --max=10 --cpu-percent=80
horizontalpodautoscaler.autoscaling/my-first-deployment autoscaled
root@ip-172-31-116-255:~/flask-app# kubectl get hpa
NAME                  REFERENCE                        TARGETS              MINPODS   MAXPODS   REPLICAS   AGE
my-first-deployment   Deployment/my-first-deployment   cpu: <unknown>/80%   5         10        5          16s
root@ip-172-31-116-255:~/flask-app#

